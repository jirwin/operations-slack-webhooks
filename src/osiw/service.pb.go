// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package osiw

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PostRequest struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostRequest) Reset()         { *m = PostRequest{} }
func (m *PostRequest) String() string { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()    {}
func (*PostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_a7f8cc55a32a4f28, []int{0}
}
func (m *PostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRequest.Unmarshal(m, b)
}
func (m *PostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRequest.Marshal(b, m, deterministic)
}
func (dst *PostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRequest.Merge(dst, src)
}
func (m *PostRequest) XXX_Size() int {
	return xxx_messageInfo_PostRequest.Size(m)
}
func (m *PostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostRequest proto.InternalMessageInfo

func (m *PostRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *PostRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PostRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type PostReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostReply) Reset()         { *m = PostReply{} }
func (m *PostReply) String() string { return proto.CompactTextString(m) }
func (*PostReply) ProtoMessage()    {}
func (*PostReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_a7f8cc55a32a4f28, []int{1}
}
func (m *PostReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostReply.Unmarshal(m, b)
}
func (m *PostReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostReply.Marshal(b, m, deterministic)
}
func (dst *PostReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostReply.Merge(dst, src)
}
func (m *PostReply) XXX_Size() int {
	return xxx_messageInfo_PostReply.Size(m)
}
func (m *PostReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PostReply.DiscardUnknown(m)
}

var xxx_messageInfo_PostReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PostRequest)(nil), "osiw.PostRequest")
	proto.RegisterType((*PostReply)(nil), "osiw.PostReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OswiClient is the client API for Oswi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OswiClient interface {
	Post(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostReply, error)
}

type oswiClient struct {
	cc *grpc.ClientConn
}

func NewOswiClient(cc *grpc.ClientConn) OswiClient {
	return &oswiClient{cc}
}

func (c *oswiClient) Post(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostReply, error) {
	out := new(PostReply)
	err := c.cc.Invoke(ctx, "/osiw.Oswi/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OswiServer is the server API for Oswi service.
type OswiServer interface {
	Post(context.Context, *PostRequest) (*PostReply, error)
}

func RegisterOswiServer(s *grpc.Server, srv OswiServer) {
	s.RegisterService(&_Oswi_serviceDesc, srv)
}

func _Oswi_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OswiServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osiw.Oswi/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OswiServer).Post(ctx, req.(*PostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Oswi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "osiw.Oswi",
	HandlerType: (*OswiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Post",
			Handler:    _Oswi_Post_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_a7f8cc55a32a4f28) }

var fileDescriptor_service_a7f8cc55a32a4f28 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x2f, 0xce, 0x2c, 0x57,
	0x0a, 0xe6, 0xe2, 0x0e, 0xc8, 0x2f, 0x2e, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92,
	0xe2, 0xe2, 0xc8, 0xc8, 0x2f, 0x2e, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x0c, 0x82, 0xf3, 0x85, 0x44, 0xb8, 0x58, 0x4b, 0x32, 0x4b, 0x72, 0x52, 0x25, 0x98, 0xc0, 0x12,
	0x10, 0x8e, 0x90, 0x10, 0x17, 0x4b, 0x49, 0x6a, 0x45, 0x89, 0x04, 0x33, 0x58, 0x10, 0xcc, 0x56,
	0xe2, 0xe6, 0xe2, 0x84, 0x18, 0x5a, 0x90, 0x53, 0x69, 0x64, 0xc2, 0xc5, 0xe2, 0x5f, 0x5c, 0x9e,
	0x29, 0xa4, 0xc3, 0xc5, 0x02, 0x12, 0x14, 0x12, 0xd4, 0x03, 0x59, 0xac, 0x87, 0x64, 0xab, 0x14,
	0x3f, 0xb2, 0x50, 0x41, 0x4e, 0xa5, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x91, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x75, 0x5d, 0xad, 0x07, 0xb5, 0x00, 0x00, 0x00,
}
